---
import MainLayout from "@/layouts/MainLayout.astro";
import { actions, isInputError } from "astro:actions";

const result = Astro.getActionResult(actions.request);
const inputErrors = isInputError(result?.error) ? result.error.fields : {};

export const prerender = false;
---

<MainLayout title="Frontend Mentor | Contact Form">
  <main class="bg-theme-green-lighter flex min-h-screen justify-center py-8">
    <div class="bg-theme-white min-h-screen max-w-85 rounded-2xl p-6">
      <h1 class="text-theme-grey-darker mb-8 text-3xl font-bold">Contact Us</h1>
      <form method="post" action={actions.request}>
        <div class="mb-6 flex flex-col">
          <label for="first-name" class="mb-2"
            >First Name <span class="text-theme-green-medium">*</span></label
          >
          <input
            transition:persist
            type="text"
            id="first-name"
            name="firstName"
            class="border-theme-grey-medium focus:border-theme-green-medium rounded-lg border-1 px-4 py-2 hover:cursor-pointer focus:outline-none"
            autocomplete="given-name"
            aria-required="true"
          />
          {
            inputErrors.firstName && (
              <p class="text-theme-red mt-2 text-sm">{inputErrors.firstName}</p>
            )
          }
        </div>

        <div class="mb-6 flex flex-col">
          <label for="last-name" class="mb-2"
            >Last Name <span class="text-theme-green-medium">*</span></label
          >
          <input
            transition:persist
            type="text"
            id="last-name"
            name="lastName"
            class="border-theme-grey-medium focus:border-theme-green-medium rounded-lg border-1 px-4 py-2 hover:cursor-pointer focus:outline-none"
            autocomplete="family-name"
            aria-required="true"
          />
          {
            inputErrors.lastName && (
              <p class="text-theme-red mt-2 text-sm">{inputErrors.lastName}</p>
            )
          }
        </div>

        <div class="mb-6 flex flex-col">
          <label for="email-address" class="mb-2"
            >Email Address <span class="text-theme-green-medium">*</span></label
          >
          <input
            transition:persist
            type="text"
            id="email-address"
            name="emailAddress"
            class="border-theme-grey-medium focus:border-theme-green-medium rounded-lg border-1 px-4 py-2 hover:cursor-pointer focus:outline-none"
            autocomplete="email"
            aria-required="true"
          />
          {
            inputErrors.emailAddress && (
              <p class="text-theme-red mt-2 text-sm">{inputErrors.emailAddress}</p>
            )
          }
        </div>

        <fieldset
          transition:persist
          id="query-type"
          class="mb-7 flex flex-col items-start gap-4"
          aria-required="true"
        >
          <legend class="mb-4">Query Type <span class="text-theme-green-medium">*</span></legend>

          <div
            class="border-theme-grey-medium flex w-full items-center gap-4 rounded-lg border-1 px-6 py-2.5"
          >
            <div class="relative inline-block">
              <input
                type="radio"
                id="general-inquiry"
                name="type"
                value="general-inquiry"
                class="peer absolute opacity-0"
              />
              <label
                for="general-inquiry"
                class="block h-5 w-5 cursor-pointer rounded-full border-2 border-gray-300 peer-checked:border-none peer-checked:bg-[url('/icon-radio-selected.svg')] peer-checked:bg-cover peer-checked:bg-center"
              ></label>
            </div>
            <label for="general-inquiry" class="text-lg">General Inquiry</label>
          </div>

          <div
            class="border-theme-grey-medium flex w-full items-center gap-4 rounded-lg border-1 px-6 py-2.5"
          >
            <div class="relative inline-block">
              <input
                type="radio"
                id="support-request"
                name="type"
                value="support-request"
                class="peer absolute opacity-0"
              />
              <label
                for="support-request"
                class="block h-5 w-5 cursor-pointer rounded-full border-2 border-gray-300 peer-checked:border-none peer-checked:bg-[url('/icon-radio-selected.svg')] peer-checked:bg-cover peer-checked:bg-center"
              ></label>
            </div>
            <label for="support-request" class="text-lg">Support Request</label>
          </div>
        </fieldset>
        {inputErrors.type && <p class="text-theme-red text-sm">{inputErrors.type}</p>}

        <div class="flex flex-col">
          <label for="message" class="mb-2"
            >Message <span class="text-theme-green-medium">*</span></label
          >
          <textarea
            transition:persist
            name="message"
            id="message"
            class="border-theme-grey-medium focus:border-theme-green-medium mb-8 h-60 resize-none rounded-lg border-1 px-4 py-2 hover:cursor-pointer focus:outline-none"
            aria-required="true"></textarea>
          {inputErrors.message && <p class="text-theme-red text-sm">{inputErrors.message}</p>}
        </div>
        <div class="mb-10 flex items-center gap-x-5">
          <input
            transition:persist
            type="checkbox"
            id="consent"
            name="consent"
            class="border-theme-grey-medium size-5"
            aria-required="true"
          />
          <label for="consent"
            >I consent to being contacted by the team <span class="text-theme-green-medium">*</span
            ></label
          >
        </div>
        {inputErrors.consent && <p class="text-theme-red text-sm">{inputErrors.consent}</p>}
        <button
          class="bg-theme-green-medium text-theme-white hover:bg-theme-grey-darker w-full rounded-lg py-4 text-lg hover:cursor-pointer"
          >Submit</button
        >
      </form>
    </div>
  </main>
</MainLayout>

<script>
  document.addEventListener("astro:page-load", () => {
    const radioButtons: NodeListOf<HTMLElement> = document.querySelectorAll("input[type='radio']");

    const handleClick = (id: string) => {
      radioButtons.forEach((radioButton) => {
        const inquiryDiv = document.getElementById(radioButton.id)?.parentElement?.parentElement;
        if (radioButton.id === id) {
          inquiryDiv?.classList.add("bg-theme-green-lighter");
        } else {
          inquiryDiv?.classList.remove("bg-theme-green-lighter");
        }
      });
    };

    radioButtons.forEach((radioButton) => {
      radioButton.addEventListener("click", (event) => {
        const target: HTMLElement = event.target as HTMLElement;
        handleClick(target.id);
      });
    });
  });
</script>
